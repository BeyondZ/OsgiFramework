// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schedule.proto

package org.fc.zippo.scheduler.pbgens;

public final class Schedule {
  private Schedule() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code org.fc.zippo.scheduler.pbgens.PModule}
   */
  public enum PModule
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *Dispatching and Directing Center
     * </pre>
     *
     * <code>DDC = 0;</code>
     */
    DDC(0),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *Dispatching and Directing Center
     * </pre>
     *
     * <code>DDC = 0;</code>
     */
    public static final int DDC_VALUE = 0;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PModule valueOf(int value) {
      return forNumber(value);
    }

    public static PModule forNumber(int value) {
      switch (value) {
        case 0: return DDC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PModule>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PModule> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PModule>() {
            public PModule findValueByNumber(int number) {
              return PModule.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fc.zippo.scheduler.pbgens.Schedule.getDescriptor().getEnumTypes().get(0);
    }

    private static final PModule[] VALUES = values();

    public static PModule valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PModule(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.fc.zippo.scheduler.pbgens.PModule)
  }

  /**
   * Protobuf enum {@code org.fc.zippo.scheduler.pbgens.PCommand}
   */
  public enum PCommand
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *心跳检测
     * </pre>
     *
     * <code>RHR = 0;</code>
     */
    RHR(0),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *心跳检测
     * </pre>
     *
     * <code>RHR = 0;</code>
     */
    public static final int RHR_VALUE = 0;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PCommand valueOf(int value) {
      return forNumber(value);
    }

    public static PCommand forNumber(int value) {
      switch (value) {
        case 0: return RHR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PCommand>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PCommand> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PCommand>() {
            public PCommand findValueByNumber(int number) {
              return PCommand.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fc.zippo.scheduler.pbgens.Schedule.getDescriptor().getEnumTypes().get(1);
    }

    private static final PCommand[] VALUES = values();

    public static PCommand valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PCommand(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.fc.zippo.scheduler.pbgens.PCommand)
  }

  public interface PSThreadsInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.fc.zippo.scheduler.pbgens.PSThreadsInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string gcmds = 1;</code>
     */
    java.util.List<java.lang.String>
        getGcmdsList();
    /**
     * <code>repeated string gcmds = 1;</code>
     */
    int getGcmdsCount();
    /**
     * <code>repeated string gcmds = 1;</code>
     */
    java.lang.String getGcmds(int index);
    /**
     * <code>repeated string gcmds = 1;</code>
     */
    com.google.protobuf.ByteString
        getGcmdsBytes(int index);
  }
  /**
   * Protobuf type {@code org.fc.zippo.scheduler.pbgens.PSThreadsInfo}
   */
  public  static final class PSThreadsInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.fc.zippo.scheduler.pbgens.PSThreadsInfo)
      PSThreadsInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PSThreadsInfo.newBuilder() to construct.
    private PSThreadsInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PSThreadsInfo() {
      gcmds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PSThreadsInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                gcmds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              gcmds_.add(s);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          gcmds_ = gcmds_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fc.zippo.scheduler.pbgens.Schedule.internal_static_org_fc_zippo_scheduler_pbgens_PSThreadsInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fc.zippo.scheduler.pbgens.Schedule.internal_static_org_fc_zippo_scheduler_pbgens_PSThreadsInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo.class, org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo.Builder.class);
    }

    public static final int GCMDS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList gcmds_;
    /**
     * <code>repeated string gcmds = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getGcmdsList() {
      return gcmds_;
    }
    /**
     * <code>repeated string gcmds = 1;</code>
     */
    public int getGcmdsCount() {
      return gcmds_.size();
    }
    /**
     * <code>repeated string gcmds = 1;</code>
     */
    public java.lang.String getGcmds(int index) {
      return gcmds_.get(index);
    }
    /**
     * <code>repeated string gcmds = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGcmdsBytes(int index) {
      return gcmds_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < gcmds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, gcmds_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < gcmds_.size(); i++) {
          dataSize += computeStringSizeNoTag(gcmds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getGcmdsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo)) {
        return super.equals(obj);
      }
      org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo other = (org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo) obj;

      boolean result = true;
      result = result && getGcmdsList()
          .equals(other.getGcmdsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getGcmdsCount() > 0) {
        hash = (37 * hash) + GCMDS_FIELD_NUMBER;
        hash = (53 * hash) + getGcmdsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.fc.zippo.scheduler.pbgens.PSThreadsInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.fc.zippo.scheduler.pbgens.PSThreadsInfo)
        org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fc.zippo.scheduler.pbgens.Schedule.internal_static_org_fc_zippo_scheduler_pbgens_PSThreadsInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fc.zippo.scheduler.pbgens.Schedule.internal_static_org_fc_zippo_scheduler_pbgens_PSThreadsInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo.class, org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo.Builder.class);
      }

      // Construct using org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        gcmds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fc.zippo.scheduler.pbgens.Schedule.internal_static_org_fc_zippo_scheduler_pbgens_PSThreadsInfo_descriptor;
      }

      @java.lang.Override
      public org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo getDefaultInstanceForType() {
        return org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo.getDefaultInstance();
      }

      @java.lang.Override
      public org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo build() {
        org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo buildPartial() {
        org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo result = new org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          gcmds_ = gcmds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.gcmds_ = gcmds_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo) {
          return mergeFrom((org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo other) {
        if (other == org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo.getDefaultInstance()) return this;
        if (!other.gcmds_.isEmpty()) {
          if (gcmds_.isEmpty()) {
            gcmds_ = other.gcmds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureGcmdsIsMutable();
            gcmds_.addAll(other.gcmds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList gcmds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureGcmdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          gcmds_ = new com.google.protobuf.LazyStringArrayList(gcmds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string gcmds = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getGcmdsList() {
        return gcmds_.getUnmodifiableView();
      }
      /**
       * <code>repeated string gcmds = 1;</code>
       */
      public int getGcmdsCount() {
        return gcmds_.size();
      }
      /**
       * <code>repeated string gcmds = 1;</code>
       */
      public java.lang.String getGcmds(int index) {
        return gcmds_.get(index);
      }
      /**
       * <code>repeated string gcmds = 1;</code>
       */
      public com.google.protobuf.ByteString
          getGcmdsBytes(int index) {
        return gcmds_.getByteString(index);
      }
      /**
       * <code>repeated string gcmds = 1;</code>
       */
      public Builder setGcmds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGcmdsIsMutable();
        gcmds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string gcmds = 1;</code>
       */
      public Builder addGcmds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGcmdsIsMutable();
        gcmds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string gcmds = 1;</code>
       */
      public Builder addAllGcmds(
          java.lang.Iterable<java.lang.String> values) {
        ensureGcmdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, gcmds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string gcmds = 1;</code>
       */
      public Builder clearGcmds() {
        gcmds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string gcmds = 1;</code>
       */
      public Builder addGcmdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureGcmdsIsMutable();
        gcmds_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.fc.zippo.scheduler.pbgens.PSThreadsInfo)
    }

    // @@protoc_insertion_point(class_scope:org.fc.zippo.scheduler.pbgens.PSThreadsInfo)
    private static final org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo();
    }

    public static org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PSThreadsInfo>
        PARSER = new com.google.protobuf.AbstractParser<PSThreadsInfo>() {
      @java.lang.Override
      public PSThreadsInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PSThreadsInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PSThreadsInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PSThreadsInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.fc.zippo.scheduler.pbgens.Schedule.PSThreadsInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_fc_zippo_scheduler_pbgens_PSThreadsInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_fc_zippo_scheduler_pbgens_PSThreadsInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016schedule.proto\022\035org.fc.zippo.scheduler" +
      ".pbgens\"\036\n\rPSThreadsInfo\022\r\n\005gcmds\030\001 \003(\t*" +
      "\022\n\007PModule\022\007\n\003DDC\020\000*\023\n\010PCommand\022\007\n\003RHR\020\000" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_fc_zippo_scheduler_pbgens_PSThreadsInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_fc_zippo_scheduler_pbgens_PSThreadsInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_fc_zippo_scheduler_pbgens_PSThreadsInfo_descriptor,
        new java.lang.String[] { "Gcmds", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
